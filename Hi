local HttpService = game:GetService("HttpService")
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local TEMP_KEY_LINK = "https://direct-link.net/1324468/zen-hub-dead-rails-script" -- Link for 24-hour keys
local PERM_KEY_LINK = "Gettable Only In Discord" -- Link for permanent keys

local TEMP_KEY_STORAGE = "ZenHubTempKey"
local PERM_KEY_STORAGE = "ZenHubPermKey"
local EXPIRATION_TIME = 86400 -- 24 hours in seconds

-- Permanent key list (you can add more permanent keys here)
local permanentKeys = {
    "PERM-ABC123",
    "PERM-ZENHUB",
    "PERM-ELITEUSER"
}

-- Function to check if a key is permanent
local function isPermanentKey(key)
    for _, permKey in pairs(permanentKeys) do
        if key == permKey then
            return true
        end
    end
    return false
end

-- Function to check if the temporary key is valid
local function isTempKeyValid()
    if isfile(TEMP_KEY_STORAGE) then
        local data = readfile(TEMP_KEY_STORAGE)
        local decoded = HttpService:JSONDecode(data)
        if decoded.Key and os.time() < decoded.Expiration then
            return true
        end
    end
    return false
end

-- Function to save the temporary key with expiration
local function saveTempKey(key)
    local data = {
        Key = key,
        Expiration = os.time() + EXPIRATION_TIME
    }
    writefile(TEMP_KEY_STORAGE, HttpService:JSONEncode(data))
end

-- Function to save a permanent key
local function savePermKey(key)
    writefile(PERM_KEY_STORAGE, key)
end

-- Check if a permanent key is already saved
local function hasPermKey()
    if isfile(PERM_KEY_STORAGE) then
        local savedKey = readfile(PERM_KEY_STORAGE)
        if isPermanentKey(savedKey) then
            return true
        end
    end
    return false
end

-- Key system prompt
local function keyPrompt()
    if not isTempKeyValid() and not hasPermKey() then
        Rayfield:Notify({
            Title = "Zen Hub Key Required",
            Content = "Choose your key type:\n[1] Temporary Key (24 hours)\n[2] Permanent Key",
            Duration = 10,
            Image = "rbxassetid://4483345998"
        })

        -- Open both key links in clipboard
        setclipboard("Temp Key: " .. TEMP_KEY_LINK .. "\nPerm Key: " .. PERM_KEY_LINK)
        Rayfield:Notify({
            Title = "Key Links Copied",
            Content = "The key links have been copied to your clipboard. Paste them into your browser.",
            Duration = 5
        })

        -- Ask for the key
        local userKey = Rayfield:Prompt({
            Title = "Enter Your Key",
            Content = "Paste the key you received from the website.",
            Placeholder = "Enter Key"
        })

        -- Permanent key validation
        if isPermanentKey(userKey) then
            savePermKey(userKey)
            Rayfield:Notify({
                Title = "Permanent Key Accepted",
                Content = "You have permanent access!",
                Duration = 5
            })
        elseif userKey == "TEMP-1234" then -- Simulate a correct temporary key
            saveTempKey(userKey)
            Rayfield:Notify({
                Title = "Temporary Key Accepted",
                Content = "You have access for 24 hours.",
                Duration = 5
            })
        else
            Rayfield:Notify({
                Title = "Invalid Key",
                Content = "Incorrect key. Try again.",
                Duration = 5
            })
            keyPrompt()
        end
    end
end

-- Run key check
keyPrompt()

-- UI Window
local Window = Rayfield:CreateWindow({
    Name = "Zen Hub",
    LoadingTitle = "Zen Hub",
    LoadingSubtitle = "by You",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "ZenHub",
        FileName = "ZenHubSettings"
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

-- Button to open/close the UI
local ZenButton = Instance.new("TextButton")
ZenButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ZenButton.Size = UDim2.new(0, 100, 0, 50)
ZenButton.Position = UDim2.new(0, 10, 0, 10)
ZenButton.Text = "Zen"
ZenButton.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
ZenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ZenButton.BorderSizePixel = 2
ZenButton.BorderColor3 = Color3.fromRGB(255, 0, 0)

local uiVisible = true
ZenButton.MouseButton1Click:Connect(function()
    uiVisible = not uiVisible
    Window.Main.Visible = uiVisible
end)

-- Main Section
local MainSection = Window:CreateTab("Main", { Icon = "rbxassetid://4483345998" })

-- Aura Kill Toggle Button
local auraEnabled = false
local auraRange = 50
local auraDamage = 50

local AuraButton = MainSection:CreateToggle({
    Name = "Aura Kill",
    CurrentValue = false,
    Flag = "AuraToggle",
    Callback = function(state)
        auraEnabled = state
        if auraEnabled then
            print("Aura Kill Enabled")
        else
            print("Aura Kill Disabled")
        end
    end
})

-- Range Slider
local RangeSlider = MainSection:CreateSlider({
    Name = "Range",
    Min = 10,
    Max = 300,
    CurrentValue = auraRange,
    Flag = "RangeSlider",
    Callback = function(value)
        auraRange = value
        print("Range set to:", auraRange)
    end
})

-- Damage Slider
local DamageSlider = MainSection:CreateSlider({
    Name = "Damage",
    Min = 50,
    Max = 100000,
    CurrentValue = auraDamage,
    Flag = "DamageSlider",
    Callback = function(value)
        auraDamage = value
        print("Damage set to:", auraDamage)
    end
})

-- Aura Kill Function
local function AuraKill()
    while auraEnabled do
        for _, npc in pairs(workspace:GetDescendants()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") then
                local humanoid = npc:FindFirstChild("Humanoid")
                local rootPart = npc:FindFirstChild("HumanoidRootPart")

                if humanoid and rootPart then
                    local distance = (rootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                    if distance <= auraRange then
                        if not npc:FindFirstChild("Friendly") then -- Avoid teammates
                            humanoid:TakeDamage(auraDamage)

                            -- Simulate dragging body (for Dead Rails)
                            task.spawn(function()
                                local drag = Instance.new("BodyPosition")
                                drag.MaxForce = Vector3.new(5000, 5000, 5000)
                                drag.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                                drag.Parent = rootPart
                                wait(2)
                                drag:Destroy()
                            end)
                        end
                    end
                end
            end
        end
        wait(0.5)
    end
end

-- Activate aura in background loop
task.spawn(function()
    while true do
        if auraEnabled then
            AuraKill()
        end
        wait(0.5)
    end
end)
